# Generated by Django 4.2.13 on 2024-05-31 16:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import object.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuldingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип здания',
                'verbose_name_plural': 'Типы здания',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('time_zone_uts', models.IntegerField(validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(9)], verbose_name='Временная зона UTS')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Состояние помещений',
                'verbose_name_plural': 'Состояния помещений',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Эл. почта')),
                ('phone_number', object.models.PhoneNumberField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Realty',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.CharField(max_length=256, null=True, verbose_name='Адрес')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Эл. почта')),
                ('site', models.URLField(blank=True, null=True, verbose_name='Сайт')),
                ('area', models.PositiveIntegerField(blank=True, null=True, verbose_name='Площадь, метры квадратные')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Цена, рублей в месяц за квадратный метр')),
                ('publish_date', models.DateField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст обьявления')),
                ('building_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='object.buldingtype', verbose_name='Тип здания')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='object.category', verbose_name='Категория')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='object.city', verbose_name='Город')),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='object.condition', verbose_name='Состояние помещения')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='realtys', to='object.contact', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
            },
        ),
    ]
